/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822Proxiable__factory>;
    getContractFactory(
      name: "IERC1967",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1967__factory>;
    getContractFactory(
      name: "BeaconProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BeaconProxy__factory>;
    getContractFactory(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeacon__factory>;
    getContractFactory(
      name: "ERC1967Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Proxy__factory>;
    getContractFactory(
      name: "ERC1967Upgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Upgrade__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "ILiquidityPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILiquidityPool__factory>;
    getContractFactory(
      name: "IMessageService",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMessageService__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "IZKBridge",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IZKBridge__factory>;
    getContractFactory(
      name: "IZKBridgeReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IZKBridgeReceiver__factory>;
    getContractFactory(
      name: "NFTBridge",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTBridge__factory>;
    getContractFactory(
      name: "NFTBridgeEntrypoint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTBridgeEntrypoint__factory>;
    getContractFactory(
      name: "NFTBridgeGetters",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTBridgeGetters__factory>;
    getContractFactory(
      name: "NFTBridgeGovernance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTBridgeGovernance__factory>;
    getContractFactory(
      name: "NFTBridgeImplementation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTBridgeImplementation__factory>;
    getContractFactory(
      name: "NFTBridgeSetters",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTBridgeSetters__factory>;
    getContractFactory(
      name: "NFTBridgeSetup",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTBridgeSetup__factory>;
    getContractFactory(
      name: "NFTBridgeState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTBridgeState__factory>;
    getContractFactory(
      name: "BridgeNFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BridgeNFT__factory>;
    getContractFactory(
      name: "NFTImplementation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTImplementation__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1822Proxiable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822Proxiable>;
    getContractAt(
      name: "IERC1967",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1967>;
    getContractAt(
      name: "BeaconProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BeaconProxy>;
    getContractAt(
      name: "IBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeacon>;
    getContractAt(
      name: "ERC1967Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Proxy>;
    getContractAt(
      name: "ERC1967Upgrade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Upgrade>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "ILiquidityPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILiquidityPool>;
    getContractAt(
      name: "IMessageService",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMessageService>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "IZKBridge",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IZKBridge>;
    getContractAt(
      name: "IZKBridgeReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IZKBridgeReceiver>;
    getContractAt(
      name: "NFTBridge",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTBridge>;
    getContractAt(
      name: "NFTBridgeEntrypoint",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTBridgeEntrypoint>;
    getContractAt(
      name: "NFTBridgeGetters",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTBridgeGetters>;
    getContractAt(
      name: "NFTBridgeGovernance",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTBridgeGovernance>;
    getContractAt(
      name: "NFTBridgeImplementation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTBridgeImplementation>;
    getContractAt(
      name: "NFTBridgeSetters",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTBridgeSetters>;
    getContractAt(
      name: "NFTBridgeSetup",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTBridgeSetup>;
    getContractAt(
      name: "NFTBridgeState",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTBridgeState>;
    getContractAt(
      name: "BridgeNFT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BridgeNFT>;
    getContractAt(
      name: "NFTImplementation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTImplementation>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
