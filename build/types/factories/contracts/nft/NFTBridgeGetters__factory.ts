/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  NFTBridgeGetters,
  NFTBridgeGettersInterface,
} from "../../../contracts/nft/NFTBridgeGetters";

const _abi = [
  {
    inputs: [],
    name: "MIN_LOCK_TIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId_",
        type: "uint16",
      },
    ],
    name: "bridgeContracts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "destChainId",
        type: "uint16",
      },
    ],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "isWrappedAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "tokenChainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "tokenAddress",
        type: "bytes32",
      },
    ],
    name: "wrappedAsset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zkBridge",
    outputs: [
      {
        internalType: "contract IZKBridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610324806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c5780639f2f1e06116100665780639f2f1e06146101d4578063ad66a5f1146101f8578063b424465914610225578063d60b347f1461023657600080fd5b80638da5cb5b146101a55780639a8a0592146101b65780639f0a22a6146101cc57600080fd5b80630d668087146100d45780631a2be4da146100eb5780631ff1e286146101275780632f3a3d5d14610179578063396f7b231461018a5780633ff032071461019b575b600080fd5b6005545b6040519081526020015b60405180910390f35b6101176100f9366004610262565b6001600160a01b031660009081526008602052604090205460ff1690565b60405190151581526020016100e2565b6101616101353660046102a9565b61ffff91909116600090815260076020908152604080832093835292905220546001600160a01b031690565b6040516001600160a01b0390911681526020016100e2565b6001546001600160a01b0316610161565b6003546001600160a01b0316610161565b6100d86201518081565b6002546001600160a01b0316610161565b600a5460405161ffff90911681526020016100e2565b6004546100d8565b6100d86101e23660046102d3565b61ffff166000908152600b602052604090205490565b6101616102063660046102d3565b61ffff166000908152600960205260409020546001600160a01b031690565b6000546001600160a01b0316610161565b610117610244366004610262565b6001600160a01b031660009081526006602052604090205460ff1690565b60006020828403121561027457600080fd5b81356001600160a01b038116811461028b57600080fd5b9392505050565b803561ffff811681146102a457600080fd5b919050565b600080604083850312156102bc57600080fd5b6102c583610292565b946020939093013593505050565b6000602082840312156102e557600080fd5b61028b8261029256fea2646970667358221220d32a4f6e5ffe45515fb0ddf90083687f1749aaffbeccd0d44e9cf005c39d397c64736f6c634300080e0033";

type NFTBridgeGettersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTBridgeGettersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTBridgeGetters__factory extends ContractFactory {
  constructor(...args: NFTBridgeGettersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTBridgeGetters> {
    return super.deploy(overrides || {}) as Promise<NFTBridgeGetters>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTBridgeGetters {
    return super.attach(address) as NFTBridgeGetters;
  }
  override connect(signer: Signer): NFTBridgeGetters__factory {
    return super.connect(signer) as NFTBridgeGetters__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTBridgeGettersInterface {
    return new utils.Interface(_abi) as NFTBridgeGettersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTBridgeGetters {
    return new Contract(address, _abi, signerOrProvider) as NFTBridgeGetters;
  }
}
