/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  NFTBridgeGovernance,
  NFTBridgeGovernanceInterface,
} from "../../../contracts/nft/NFTBridgeGovernance";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newContract",
        type: "address",
      },
    ],
    name: "ContractUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pendingImplementation",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "NewPendingImplementation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftBridge",
        type: "address",
      },
    ],
    name: "RegisterChain",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "MIN_LOCK_TIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId_",
        type: "uint16",
      },
    ],
    name: "bridgeContracts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmContractUpgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "destChainId",
        type: "uint16",
      },
    ],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "isWrappedAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "registerChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "destChainId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockTime",
        type: "uint256",
      },
    ],
    name: "setLockTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "tokenChainId_",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "tokenAddress_",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "wrapper_",
        type: "address",
      },
    ],
    name: "setWrappedAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "zkBridge",
        type: "address",
      },
    ],
    name: "setZkBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "submitContractUpgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "tokenChainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "tokenAddress",
        type: "bytes32",
      },
    ],
    name: "wrappedAsset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zkBridge",
    outputs: [
      {
        internalType: "contract IZKBridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c3c806100206000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80639f0a22a6116100ad578063b6dc123611610071578063b6dc1236146102ce578063c7f0da13146102e1578063cd44141f146102f4578063d1dc83c214610307578063d60b347f1461030f57600080fd5b80639f0a22a6146102515780639f2f1e0614610259578063ad66a5f11461027d578063ae04d45d146102aa578063b4244659146102bd57600080fd5b80633a552757116100f45780633a552757146101f85780633ff032071461020d5780637afad35c146102175780638da5cb5b1461022a5780639a8a05921461023b57600080fd5b80630d668087146101315780631a2be4da146101485780631ff1e286146101845780632f3a3d5d146101d6578063396f7b23146101e7575b600080fd5b6005545b6040519081526020015b60405180910390f35b610174610156366004610a2b565b6001600160a01b031660009081526008602052604090205460ff1690565b604051901515815260200161013f565b6101be610192366004610a5f565b61ffff91909116600090815260076020908152604080832093835292905220546001600160a01b031690565b6040516001600160a01b03909116815260200161013f565b6001546001600160a01b03166101be565b6003546001600160a01b03166101be565b61020b610206366004610a2b565b61033b565b005b6101356201518081565b61020b610225366004610a89565b610451565b6002546001600160a01b03166101be565b600a5460405161ffff909116815260200161013f565b600454610135565b610135610267366004610ac5565b61ffff166000908152600b602052604090205490565b6101be61028b366004610ac5565b61ffff166000908152600960205260409020546001600160a01b031690565b61020b6102b8366004610ae0565b6104dd565b6000546001600160a01b03166101be565b61020b6102dc366004610af9565b610575565b61020b6102ef366004610a5f565b610623565b61020b610302366004610a2b565b610674565b61020b6106cb565b61017461031d366004610a2b565b6001600160a01b031660009081526006602052604090205460ff1690565b3361034e6002546001600160a01b031690565b6001600160a01b03161461037d5760405162461bcd60e51b815260040161037490610b2c565b60405180910390fd5b6001600160a01b0381166103d35760405162461bcd60e51b815260206004820152601b60248201527f436865636b2070656e64696e67496d706c656d656e746174696f6e00000000006044820152606401610374565b60006103e76003546001600160a01b031690565b90506103f2826108ff565b61040d6103fe60055490565b6104089042610b61565b600455565b816001600160a01b0316816001600160a01b03167fe945ccee5d701fc83f9b8aa8ca94ea4219ec1fcbd4f4cab4f0ea57c5c3e1d81560405160405180910390a35050565b336104646002546001600160a01b031690565b6001600160a01b03161461048a5760405162461bcd60e51b815260040161037490610b2c565b61ffff83166000908152600760209081526040808320858452825280832080546001600160a01b0319166001600160a01b038616908117909155835260089091529020805460ff19166001179055505050565b336104f06002546001600160a01b031690565b6001600160a01b0316146105165760405162461bcd60e51b815260040161037490610b2c565b620151808110156105695760405162461bcd60e51b815260206004820152601b60248201527f496e636f7272656374206c6f636b54696d652073657474696e677300000000006044820152606401610374565b61057281600555565b50565b336105886002546001600160a01b031690565b6001600160a01b0316146105ae5760405162461bcd60e51b815260040161037490610b2c565b61ffff8216600090815260096020526040902080546001600160a01b0319166001600160a01b0383161790556040805161ffff841681526001600160a01b03831660208201527faf4e2924b78f8cba0a0e626999cf99bb7a50dba42aab94e3030ed34e54e5c12c910160405180910390a15050565b336106366002546001600160a01b031690565b6001600160a01b03161461065c5760405162461bcd60e51b815260040161037490610b2c565b61ffff919091166000908152600b6020526040902055565b336106876002546001600160a01b031690565b6001600160a01b0316146106ad5760405162461bcd60e51b815260040161037490610b2c565b600080546001600160a01b0319166001600160a01b03831617905550565b336106de6002546001600160a01b031690565b6001600160a01b0316146107045760405162461bcd60e51b815260040161037490610b2c565b60006107186003546001600160a01b031690565b6001600160a01b03160361076e5760405162461bcd60e51b815260206004820152601b60248201527f436865636b2070656e64696e67496d706c656d656e746174696f6e00000000006044820152606401610374565b6004544210156107b25760405162461bcd60e51b815260206004820152600f60248201526e29ba34b636103637b1b5b2b21034b760891b6044820152606401610374565b60006107e57f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905060006107fb6003546001600160a01b031690565b905061080760006108ff565b61081081610921565b60408051600481526024810182526020810180516001600160e01b031663204a7f0760e21b179052905160009182916001600160a01b0385169161085391610bb7565b600060405180830381855af49150503d806000811461088e576040519150601f19603f3d011682016040523d82523d6000602084013e610893565b606091505b50915091508181906108b85760405162461bcd60e51b81526004016103749190610bd3565b50826001600160a01b0316846001600160a01b03167f2e4cc16c100f0b55e2df82ab0b1a7e294aa9cbd01b48fbaf622683fbc0507a4960405160405180910390a350505050565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b61092a81610961565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6001600160a01b0381163b6109ce5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610374565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b0381168114610a2657600080fd5b919050565b600060208284031215610a3d57600080fd5b610a4682610a0f565b9392505050565b803561ffff81168114610a2657600080fd5b60008060408385031215610a7257600080fd5b610a7b83610a4d565b946020939093013593505050565b600080600060608486031215610a9e57600080fd5b610aa784610a4d565b925060208401359150610abc60408501610a0f565b90509250925092565b600060208284031215610ad757600080fd5b610a4682610a4d565b600060208284031215610af257600080fd5b5035919050565b60008060408385031215610b0c57600080fd5b610b1583610a4d565b9150610b2360208401610a0f565b90509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610b8257634e487b7160e01b600052601160045260246000fd5b500190565b60005b83811015610ba2578181015183820152602001610b8a565b83811115610bb1576000848401525b50505050565b60008251610bc9818460208701610b87565b9190910192915050565b6020815260008251806020840152610bf2816040850160208701610b87565b601f01601f1916919091016040019291505056fea2646970667358221220b0b6d52a797f6f47ad397dcedfbbbfabb260eec338c391614e3ec8e085fcefb264736f6c634300080e0033";

type NFTBridgeGovernanceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTBridgeGovernanceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTBridgeGovernance__factory extends ContractFactory {
  constructor(...args: NFTBridgeGovernanceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTBridgeGovernance> {
    return super.deploy(overrides || {}) as Promise<NFTBridgeGovernance>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTBridgeGovernance {
    return super.attach(address) as NFTBridgeGovernance;
  }
  override connect(signer: Signer): NFTBridgeGovernance__factory {
    return super.connect(signer) as NFTBridgeGovernance__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTBridgeGovernanceInterface {
    return new utils.Interface(_abi) as NFTBridgeGovernanceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTBridgeGovernance {
    return new Contract(address, _abi, signerOrProvider) as NFTBridgeGovernance;
  }
}
